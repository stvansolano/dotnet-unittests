# .NET and C# Unit Testing Project

This is a basic C# project for playing with .NET and C# and Unit Testing.

## Getting Started

### Prerequisites

- [.NET SDK](https://dotnet.microsoft.com/download) installed on your machine.

### Installing

1. Clone the repository:
    ```sh
    git clone https://github.com/yourusername/dotnet-tests-scaffold.git
    ```
2. Navigate to the project directory:
    ```sh
    cd dotnet-tests-scaffold
    ```
3. Restore the dependencies:
    ```sh
    dotnet restore
    ```

### Running the Tests from command line
To run the unit tests, use the following command:

```sh
dotnet test --filter FullyQualifiedName~UnitTests.HelloWorldTests
```

### Running Tests in Visual Studio Code

You can also run the tests using Visual Studio Code. Follow these steps:

1. Open the project in Visual Studio Code:
    ```sh
    code .
    ```

2. Open the integrated terminal in VSCode:
    - Go to `View` > `Terminal` or press `` Ctrl+` ``.

3. In the terminal, run the tests:
    ```sh
    dotnet test --filter FullyQualifiedName~UnitTests.HelloWorldTests
    ```

4. Alternatively, you can use the Testing tab:
    - Go to `View` > `Testing` or press `Ctrl+Shift+P` and type `Testing: Focus on Testing View`.
    - Click on the `Run Tests` button.

![Testing Tab](./screenshots/vs-code-testing.png)

![Integrated Terminal](./screenshots/vs-code-shell.png)

## Using VS Code Copilot Agent Mode

With VS Code Copilot Agent Mode, you can delegate the creation of new tests to the Copilot agent. The agent can automatically generate and run tests, streamlining your development workflow.

![Copilot Agent Mode](./screenshots/vs-code-agent.png)

![Copilot Running Tests](./screenshots/vs-code-passed.png)

## Contributing

Feel free to submit issues and pull requests.

## License

This project is licensed under the MIT License.
